{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/focusVisible.js","../node_modules/@material-ui/core/esm/utils/setRef.js","../node_modules/@material-ui/core/esm/utils/useForkRef.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Star.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/lab/esm/Rating/Rating.js","../node_modules/@material-ui/core/esm/styles/useTheme.js","Components/LargeViewPorts/Global/Products.js"],"names":["hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","isFocusVisible","target","matches","error","node","type","tagName","readOnly","isContentEditable","focusTriggersKeyboardModality","handleBlurVisible","window","clearTimeout","setTimeout","useIsFocusVisible","onBlurVisible","ref","React","useCallback","instance","doc","ReactDOM","findDOMNode","ownerDocument","addEventListener","setRef","value","current","useForkRef","refA","refB","useMemo","refValue","createSvgIcon","path","displayName","Component","memo","forwardRef","props","createElement","SvgIcon","_extends","muiName","d","roundValueToPrecision","precision","nearest","Math","round","Number","toFixed","num","decimalPart","toString","split","length","getDecimalPrecision","IconContainer","other","_objectWithoutProperties","defaultIcon","Star","fontSize","defaultLabelText","concat","Rating","classes","className","_props$defaultValue","defaultValue","_props$disabled","disabled","emptyIcon","_props$emptyLabelText","emptyLabelText","_props$getLabelText","getLabelText","_props$icon","icon","_props$IconContainerC","IconContainerComponent","_props$max","max","nameProp","name","onChange","onChangeActive","onMouseLeave","onMouseMove","_props$precision","_props$readOnly","_props$size","size","valueProp","_React$useState","useState","defaultName","setDefaultName","useEffect","random","isControlled","useRef","undefined","_React$useState2","valueState","setValueState","valueRounded","theme","useThemeWithoutDefault","defaultTheme","_React$useState3","hover","focus","_React$useState3$","setState","_useIsFocusVisible","focusVisibleRef","_React$useState4","focusVisible","setFocusVisible","rootRef","handleFocusRef","handleRef","handleChange","newValue","parseFloat","handleClear","clientX","clientY","handleFocus","newFocus","prev","handleBlur","item","state","labelProps","id","String","replace","container","clsx","filled","iconFilled","iconEmpty","iconHover","iconFocus","active","iconActive","Fragment","key","label","htmlFor","visuallyhidden","onFocus","onBlur","onClick","checked","percent","rootNode","_rootNode$getBounding","getBoundingClientRect","right","left","width","firstChild","direction","newHover","min","clamp","root","capitalize","role","Array","from","map","_","index","itemValue","items","decimal","ceil","$","indexDecimal","itemDecimalValue","style","overflow","zIndex","position","defaultChecked","pristine","withStyles","display","typography","pxToRem","color","cursor","WebkitTapHighlightColor","opacity","pointerEvents","outline","sizeSmall","sizeLarge","border","clip","height","margin","padding","top","bottom","transition","transitions","create","duration","shortest","palette","action","transform","Products","parseInt","stars","product","description","marginTop"],"mappings":"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","file":"static/js/4.81c7131d.chunk.js","sourcesContent":["// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","// TODO: Make it private only in v5\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { useTheme, withStyles } from '@material-ui/core/styles';\nimport { capitalize, useForkRef, useIsFocusVisible } from '@material-ui/core/utils';\nimport Star from '../internal/svg-icons/Star';\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nfunction getDecimalPrecision(num) {\n  var decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToPrecision(value, precision) {\n  if (value == null) {\n    return value;\n  }\n\n  var nearest = Math.round(value / precision) * precision;\n  return Number(nearest.toFixed(getDecimalPrecision(precision)));\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      position: 'relative',\n      fontSize: theme.typography.pxToRem(24),\n      color: '#ffb400',\n      cursor: 'pointer',\n      WebkitTapHighlightColor: 'transparent',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '&$focusVisible $iconActive': {\n        outline: '1px solid #999'\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      fontSize: theme.typography.pxToRem(30)\n    },\n\n    /* Styles applied to the root element if `readOnly={true}`. */\n    readOnly: {\n      pointerEvents: 'none'\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if keyboard focused. */\n    focusVisible: {},\n\n    /* Visually hide an element. */\n    visuallyhidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      color: '#000',\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    },\n\n    /* Styles applied to the pristine label. */\n    pristine: {\n      'input:focus + &': {\n        top: 0,\n        bottom: 0,\n        position: 'absolute',\n        outline: '1px solid #999',\n        width: '100%'\n      }\n    },\n\n    /* Styles applied to the label elements. */\n    label: {\n      cursor: 'inherit'\n    },\n\n    /* Styles applied to the icon wrapping elements. */\n    icon: {\n      display: 'flex',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      // Fix mouseLeave issue.\n      // https://github.com/facebook/react/issues/4492\n      pointerEvents: 'none'\n    },\n\n    /* Styles applied to the icon wrapping elements when empty. */\n    iconEmpty: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the icon wrapping elements when filled. */\n    iconFilled: {},\n\n    /* Styles applied to the icon wrapping elements when hover. */\n    iconHover: {},\n\n    /* Styles applied to the icon wrapping elements when focus. */\n    iconFocus: {},\n\n    /* Styles applied to the icon wrapping elements when active. */\n    iconActive: {\n      transform: 'scale(1.2)'\n    },\n\n    /* Styles applied to the icon wrapping elements when decimals are necessary. */\n    decimal: {\n      position: 'relative'\n    }\n  };\n};\n\nfunction IconContainer(props) {\n  var value = props.value,\n      other = _objectWithoutProperties(props, [\"value\"]);\n\n  return React.createElement(\"span\", other);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? IconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n} : void 0;\nvar defaultIcon = React.createElement(Star, {\n  fontSize: \"inherit\"\n});\n\nfunction defaultLabelText(value) {\n  return \"\".concat(value, \" Star\").concat(value !== 1 ? 's' : '');\n}\n\nvar Rating = React.forwardRef(function Rating(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? null : _props$defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      emptyIcon = props.emptyIcon,\n      _props$emptyLabelText = props.emptyLabelText,\n      emptyLabelText = _props$emptyLabelText === void 0 ? 'Empty' : _props$emptyLabelText,\n      _props$getLabelText = props.getLabelText,\n      getLabelText = _props$getLabelText === void 0 ? defaultLabelText : _props$getLabelText,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$IconContainerC = props.IconContainerComponent,\n      IconContainerComponent = _props$IconContainerC === void 0 ? IconContainer : _props$IconContainerC,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      nameProp = props.name,\n      onChange = props.onChange,\n      onChangeActive = props.onChangeActive,\n      onMouseLeave = props.onMouseLeave,\n      onMouseMove = props.onMouseMove,\n      _props$precision = props.precision,\n      precision = _props$precision === void 0 ? 1 : _props$precision,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"defaultValue\", \"disabled\", \"emptyIcon\", \"emptyLabelText\", \"getLabelText\", \"icon\", \"IconContainerComponent\", \"max\", \"name\", \"onChange\", \"onChangeActive\", \"onMouseLeave\", \"onMouseMove\", \"precision\", \"readOnly\", \"size\", \"value\"]);\n\n  var _React$useState = React.useState(),\n      defaultName = _React$useState[0],\n      setDefaultName = _React$useState[1];\n\n  var name = nameProp || defaultName;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultName(\"mui-rating-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState2 = React.useState(defaultValue),\n      valueState = _React$useState2[0],\n      setValueState = _React$useState2[1];\n\n  var valueDerived = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled Rating to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled Rating ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var valueRounded = roundValueToPrecision(valueDerived, precision);\n  var theme = useTheme();\n\n  var _React$useState3 = React.useState({\n    hover: -1,\n    focus: -1\n  }),\n      _React$useState3$ = _React$useState3[0],\n      hover = _React$useState3$.hover,\n      focus = _React$useState3$.focus,\n      setState = _React$useState3[1];\n\n  var value = valueRounded;\n\n  if (hover !== -1) {\n    value = hover;\n  }\n\n  if (focus !== -1) {\n    value = focus;\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState4 = React.useState(false),\n      focusVisible = _React$useState4[0],\n      setFocusVisible = _React$useState4[1];\n\n  var rootRef = React.useRef();\n  var handleFocusRef = useForkRef(focusVisibleRef, rootRef);\n  var handleRef = useForkRef(handleFocusRef, ref);\n\n  var handleMouseMove = function handleMouseMove(event) {\n    if (onMouseMove) {\n      onMouseMove(event);\n    }\n\n    var rootNode = rootRef.current;\n\n    var _rootNode$getBounding = rootNode.getBoundingClientRect(),\n        right = _rootNode$getBounding.right,\n        left = _rootNode$getBounding.left;\n\n    var _rootNode$firstChild$ = rootNode.firstChild.getBoundingClientRect(),\n        width = _rootNode$firstChild$.width;\n\n    var percent;\n\n    if (theme.direction === 'rtl') {\n      percent = (right - event.clientX) / (width * max);\n    } else {\n      percent = (event.clientX - left) / (width * max);\n    }\n\n    var newHover = roundValueToPrecision(max * percent + precision / 2, precision);\n    newHover = clamp(newHover, precision, max);\n    setState(function (prev) {\n      return prev.hover === newHover && prev.focus === newHover ? prev : {\n        hover: newHover,\n        focus: newHover\n      };\n    });\n    setFocusVisible(false);\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    var newHover = -1;\n    setState({\n      hover: newHover,\n      focus: newHover\n    });\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var newValue = parseFloat(event.target.value);\n\n    if (!isControlled) {\n      setValueState(newValue);\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  };\n\n  var handleClear = function handleClear(event) {\n    // Ignore keyboard events\n    // https://github.com/facebook/react/issues/7407\n    if (event.clientX === 0 && event.clientY === 0) {\n      return;\n    }\n\n    setState({\n      hover: -1,\n      focus: -1\n    });\n\n    if (!isControlled) {\n      setValueState(null);\n    }\n\n    if (onChange && parseFloat(event.target.value) === valueRounded) {\n      onChange(event, null);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    var newFocus = parseFloat(event.target.value);\n    setState(function (prev) {\n      return {\n        hover: prev.hover,\n        focus: newFocus\n      };\n    });\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (hover !== -1) {\n      return;\n    }\n\n    if (focusVisible !== false) {\n      setFocusVisible(false);\n      onBlurVisible();\n    }\n\n    var newFocus = -1;\n    setState(function (prev) {\n      return {\n        hover: prev.hover,\n        focus: newFocus\n      };\n    });\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  var item = function item(state, labelProps) {\n    var id = \"\".concat(name, \"-\").concat(String(state.value).replace('.', '-'));\n    var container = React.createElement(IconContainerComponent, {\n      value: state.value,\n      className: clsx(classes.icon, state.filled ? classes.iconFilled : classes.iconEmpty, state.hover && classes.iconHover, state.focus && classes.iconFocus, state.active && classes.iconActive)\n    }, emptyIcon && !state.filled ? emptyIcon : icon);\n\n    if (readOnly) {\n      return React.createElement(React.Fragment, {\n        key: state.value\n      }, container);\n    }\n\n    return React.createElement(React.Fragment, {\n      key: state.value\n    }, React.createElement(\"label\", _extends({\n      className: classes.label,\n      htmlFor: id\n    }, labelProps), container, React.createElement(\"span\", {\n      className: classes.visuallyhidden\n    }, getLabelText(state.value))), React.createElement(\"input\", {\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onClick: handleClear,\n      disabled: disabled,\n      value: state.value,\n      id: id,\n      type: \"radio\",\n      name: name,\n      checked: state.checked,\n      className: classes.visuallyhidden\n    }));\n  };\n\n  return React.createElement(\"span\", _extends({\n    ref: handleRef,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    className: clsx(classes.root, className, size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly),\n    role: readOnly ? 'img' : null,\n    \"aria-label\": readOnly ? getLabelText(value) : null\n  }, other), Array.from(new Array(max)).map(function (_, index) {\n    var itemValue = index + 1;\n\n    if (precision < 1) {\n      var items = Array.from(new Array(1 / precision));\n      return React.createElement(\"span\", {\n        key: itemValue,\n        className: clsx(classes.decimal, itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1) && classes.iconActive)\n      }, items.map(function ($, indexDecimal) {\n        var itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);\n        return item({\n          value: itemDecimalValue,\n          filled: itemDecimalValue <= value,\n          hover: itemDecimalValue <= hover,\n          focus: itemDecimalValue <= focus,\n          checked: itemDecimalValue === valueRounded\n        }, {\n          style: items.length - 1 === indexDecimal ? {} : {\n            width: itemDecimalValue === value ? \"\".concat((indexDecimal + 1) * precision * 100, \"%\") : '0%',\n            overflow: 'hidden',\n            zIndex: 1,\n            position: 'absolute'\n          }\n        });\n      }));\n    }\n\n    return item({\n      value: itemValue,\n      active: itemValue === value && (hover !== -1 || focus !== -1),\n      filled: itemValue <= value,\n      hover: itemValue <= hover,\n      focus: itemValue <= focus,\n      checked: itemValue === valueRounded\n    });\n  }), !readOnly && !disabled && valueRounded == null && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    value: \"\",\n    id: \"\".concat(name, \"-empty\"),\n    type: \"radio\",\n    name: name,\n    defaultChecked: true,\n    className: classes.visuallyhidden\n  }), React.createElement(\"label\", {\n    className: classes.pristine,\n    htmlFor: \"\".concat(name, \"-empty\")\n  }, React.createElement(\"span\", {\n    className: classes.visuallyhidden\n  }, emptyLabelText))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Rating.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * If `true`, the rating will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when empty.\n   */\n  emptyIcon: PropTypes.node,\n\n  /**\n   * The label read when the rating input is empty.\n   */\n  emptyLabelText: PropTypes.node,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {number} value The rating label's value to format.\n   * @returns {string}\n   */\n  getLabelText: PropTypes.func,\n\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component containing the icon.\n   */\n  IconContainerComponent: PropTypes.elementType,\n\n  /**\n   * Maximum rating.\n   */\n  max: PropTypes.number,\n\n  /**\n   * The name attribute of the radio `input` elements.\n   * If `readOnly` is false, the prop is required,\n   * this input name`should be unique within the parent form.\n   */\n  name: chainPropTypes(PropTypes.string, function (props) {\n    if (!props.readOnly && !props.name) {\n      return new Error(['Material-UI: the prop `name` is required (when `readOnly` is false).', 'Additionally, the input name should be unique within the parent form.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the hover state changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChangeActive: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseMove: PropTypes.func,\n\n  /**\n   * The minimum increment value change allowed.\n   */\n  precision: PropTypes.number,\n\n  /**\n   * Removes all hover effects and pointer events.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The size of the rating.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The rating value.\n   */\n  value: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRating'\n})(Rating);","import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  return useThemeWithoutDefault() || defaultTheme;\n}","import React from \"react\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n// import { withRouter } from \"react-router-dom\";\r\nfunction Products(props) {\r\n  const value = parseInt(props.stars);\r\n  return (\r\n    <>\r\n      <div className=\"product-container\">\r\n        <div className={props.product}></div>\r\n        <small className=\"product-description\">\r\n          <b>{props.name}</b>\r\n        </small>\r\n        <span className=\"product-description\">{props.description}</span>\r\n        <Rating value={value} readOnly style={{ marginTop: \"90px\" }} />\r\n        <span style={{ fontSize: \"13px\", marginTop: \"5px\" }}>\r\n          <b>VIEW</b>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Products;\r\n"],"sourceRoot":""}